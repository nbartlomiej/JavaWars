JavaWars README
WWW: http://github.com/coriander/JavaWars


1. Working with JavaWars:

REQUIREMENTS:
 -- Operating system: So far the development has been conducted on linux only (Ubuntu 8.04). Java is said to be portable, so theoretically it's possible to work upon JavaWars on any operating system.
 -- Java: tested on 1.6.0_16, will definitely not work on java 1.4.
 -- Server: Tomcat version 6. Currently tested on apache-tomcat-6.0.20.
 -- Database: tested on MySql 5.0.51; should work also on PostGreSQL and others supported by Hibernate library 
 -- IDE/editor: use your favourite.


COMPILING
Enter the project directory and execute 'ant'.
This should compile all the java sources and then fire the gwt job to generate javascript files.

The build script has been extracted from the one generated by NetBeans 6.1 IDE (with GWT4nb plugin) and adjusted here and there. (todo:) In future it will be possible to compile the project with both ant and NetBeans.

Note: the compilation has been tested on linux only; although it should all be portable to Windows (it's Java), in practice it might not work or there might be some bash scripts embedded in the process.

Also: the ./lib directory contains all the necessary libraries in the versions that should work.

BASIC CONFIGURATION
A. Password to the database should be set in the ./web/WEB-INF/rpc-servlet.xml file. 
B. In the same file there are various tomcat-specific paths especially in the serviceProviderTarget bean. They must be adjusted according to the server structure. 

DATABASE
The database type (postgre, mysql, other) is set in the configuration .xml (./web/WEB-INF/rpc-servlet.xml), it has been already configured to use MySQL.
After a successfull connection the Hibernate library should automatically create all the necessary tables.

APPLICATION SERVER
The project is suited for deployment on a Tomcat application container, version 6.
To publish the project copy the .war archive from the ./dist folder into the tomcat's webapps directory (should be automatically unpacked).


2. Project structure:

    ./src       - sources
    ./web       - www data, general config files
    ./build     - compiled binaries
    ./dist      - .war package, ready for tomcat deployment
    ./nbproject - Netbeans project files

